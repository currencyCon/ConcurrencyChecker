//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ConcurrencyChecker {
    using System;
    using System.Reflection;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ConcurrencyChecker.Resources", typeof(Resources).GetTypeInfo().Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &apos;new Thread&apos; should be replaced with Task.Run.
        /// </summary>
        internal static string AnalyzerMessageFormatSingleLine {
            get {
                return ResourceManager.GetString("AnalyzerMessageFormatSingleLine", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Threads should be replaced with Task.
        /// </summary>
        internal static string ETCAnalyzerDescription {
            get {
                return ResourceManager.GetString("ETCAnalyzerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Threads should be replaced with Task.
        /// </summary>
        internal static string ETCAnalyzerMessageFormat {
            get {
                return ResourceManager.GetString("ETCAnalyzerMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Threads shouldn&apos;t be used.
        /// </summary>
        internal static string ETCAnalyzerTitle {
            get {
                return ResourceManager.GetString("ETCAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No Deadlocks should occur in Code.
        /// </summary>
        internal static string NSMCAnalyzerDescription {
            get {
                return ResourceManager.GetString("NSMCAnalyzerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Possible Deadlock with double Locking.
        /// </summary>
        internal static string NSMCAnalyzerMessageFormat {
            get {
                return ResourceManager.GetString("NSMCAnalyzerMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to NestedSynchronizedMethod Calls.
        /// </summary>
        internal static string NSMCAnalyzerTitle {
            get {
                return ResourceManager.GetString("NSMCAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Over async desc.
        /// </summary>
        internal static string OAAnalyzerDescription {
            get {
                return ResourceManager.GetString("OAAnalyzerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to async shouldn&apos;t be used in private methods.
        /// </summary>
        internal static string OAAnalyzerMessageFormat {
            get {
                return ResourceManager.GetString("OAAnalyzerMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Async shoudn&apos;t be nested {0} times.
        /// </summary>
        internal static string OAAnalyzerMessageFormatNestedAsync {
            get {
                return ResourceManager.GetString("OAAnalyzerMessageFormatNestedAsync", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Over Async.
        /// </summary>
        internal static string OAAnalyzerTitle {
            get {
                return ResourceManager.GetString("OAAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tapirs shouldn&apos;t be alone.
        /// </summary>
        internal static string TapirAnalyzerDescription {
            get {
                return ResourceManager.GetString("TapirAnalyzerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tapir Class is lonely.
        /// </summary>
        internal static string TapirAnalyzerMessageFormat {
            get {
                return ResourceManager.GetString("TapirAnalyzerMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Tapir :).
        /// </summary>
        internal static string TapirAnalyzerTitle {
            get {
                return ResourceManager.GetString("TapirAnalyzerTitle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeouts can lead to starvation2.
        /// </summary>
        internal static string TRRAnalyzerDescription {
            get {
                return ResourceManager.GetString("TRRAnalyzerDescription", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Timeouts can lead to starvation.
        /// </summary>
        internal static string TRRAnalyzerMessageFormat {
            get {
                return ResourceManager.GetString("TRRAnalyzerMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Starvation possible.
        /// </summary>
        internal static string TRRAnalyzerTitle {
            get {
                return ResourceManager.GetString("TRRAnalyzerTitle", resourceCulture);
            }
        }
    }
}
